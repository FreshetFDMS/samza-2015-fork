# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.

# Job
job.factory.class=org.apache.samza.job.yarn.YarnJobFactory
job.name=samza-sql-project

# YARN
yarn.container.count=1

# Task
task.class=org.apache.samza.sql.calcite.task.StreamSqlTask
task.inputs=kafka.orders
task.max.messages=8
task.outputs=kafka.tumblingwindowoutput

# Serializers
serializers.registry.avro-input.class=org.apache.samza.sql.data.serializers.SqlAvroSerdeFactory
serializers.registry.avro-output.class=org.apache.samza.sql.data.serializers.SqlAvroSerdeFactory

# AvroSerde configuration
serializers.avro-input.schema=resource:orders.avsc
serializers.avro-output.schema=resource:tumblingwindowoutput.avsc

# Calcite model
stream.sql.model=resource:orders.json

# Streaming SQL query
stream.sql.query=insert into tumblingwindowoutput select stream FLOOR(_timestamp / (60 * 60 * 1000)) as _timestamp, productId, COUNT(*) as c, SUM(units) as units from orders group by FLOOR(_timestamp / (60 * 60 * 1000)), productId

# Kafka System
systems.kafka.samza.factory=org.apache.samza.system.kafka.KafkaSystemFactory
systems.kafka.streams.orders.samza.msg.serde=avro-input
systems.kafka.streams.filteredprojectedorders.samza.msg.serde=avro-output
systems.kafka.samza.key.serde=string
systems.kafka.samza.offset.default=oldest
systems.kafka.consumer.zookeeper.connect=localhost:2181/
systems.kafka.producer.bootstrap.servers=localhost:9092
